<?php

/**
 * @file
 * The paioo user module adds separate tabs to edit the account, edit the profile, and change password.
 */

/**
 * Implementation of hook_menu().
 */
function paioo_user_menu() {
  $items = array();
  $items['user/%user/edit/profile'] = array(
    'title' => 'Edit profile',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('paioo_user_profile_form', 1),
    'access callback' => 'paioo_user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -5,
    // In hook_forms() we redirect this menu item's form callback to
    // user_profile_form() instead, so we need to load its file.
    'file path' => drupal_get_path('module', 'user'),
    'file' => 'user.pages.inc',
  );
  $items['user/%user/edit/account'] = array(
    'title' => 'Edit account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('paioo_user_account_form', 1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
    // In hook_forms() we redirect this menu item's form callback to
    // user_profile_form() instead, so we need to load its file.
    'file path' => drupal_get_path('module', 'user'),
    'file' => 'user.pages.inc',
  );
  $items['user/%user/edit/password'] = array(
    'title' => 'Change password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('paioo_user_edit_password', 1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
    'file' => 'paioo_user_edit_password.pages.inc',
  );
  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function paioo_user_menu_alter(&$items) {
// unset($items['user/%user/edit/account']);
// $items['user/%user/edit/account'] = $items['user/%user/edit'];
unset($items['user/%user/edit']);
$items['user/%user/edit'] = $items['user/%user/edit/profile'];
$items['user/%user/edit']['title'] = 'Edit';
unset($items['user/%user_category/edit']);
unset($items['user/%user_category/edit/account']);
}

/**
 * Implements hook_admin_paths_alter
 */
 function paioo_user_admin_paths_alter(&$paths) {
  // Use the regular theme when editing the user profile. Otherwise,
  // we risk confusing less advanced users.
  $paths['user/*/edit'] = FALSE;
  $paths['user/*/edit/*'] = FALSE;
 }

/**
 * Implements hook_forms().
 */
function paioo_user_forms($form_id, $args) {
  // Let the "Edit profile" form share the same callback as "Edit account", so
  // it displays the same data by default but we can alter them separately in
  // hook_form_FORM_ID_alter().
  $forms['paioo_user_profile_form'] = array(
    'callback' => 'user_profile_form',
  );
  $forms['paioo_user_account_form'] = array(
    'callback' => 'user_profile_form',
  );

  return $forms;
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function paioo_user_form_paioo_user_account_form_alter(&$form, &$form_state) {
  // Hide all user fields when displaying the main "Edit account" form. (We
  // need to explicitly check that we aren't on the "Edit profile" form or on a
  // different category under "Edit account", since this alter hook gets called
  // in those contexts also.)
  if ($form['#user_category'] == 'account') {
    foreach (array_keys(field_info_instances('user', 'user')) as $field_name) {
      $form[$field_name]['#access'] = FALSE;
    }
  }  
  // Don't require password to change email or password
  if (isset($form['account']['current_pass_required_values']['#value']['pass']) || isset($form['account']['current_pass_required_values']['#value']['mail'])) {
    unset($form['account']['current_pass']);
    unset($form['account']['current_pass_required_values']['#value']['pass']);
    unset($form['account']['current_pass_required_values']['#value']['mail']);
  }
  // Hide core password field from user edit form.
  unset($form['account']['pass']);
  // Collapse the timezone fieldset by default
  $form['timezone']['#collapsed'] = TRUE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function paioo_user_form_paioo_user_profile_form_alter(&$form, &$form_state) {
  // Hide all form elements when displaying the "Edit profile" form, except
  // user fields and other elements needed for the form to function.
  $field_names = array_keys(field_info_instances('user', 'user'));
  $form_fields_to_keep = array_merge($field_names, array('actions', 'form_build_id', 'form_token', 'form_id'));
  foreach (element_children($form) as $key) {
    if (!in_array($key, $form_fields_to_keep)) {
      $form[$key]['#access'] = FALSE;
    }
  }
  // Only show the 'submit' button on this form, and hide any others (such as
  // 'cancel account').
  foreach (element_children($form['actions']) as $key) {
    if ($key != 'submit') {
      $form['actions'][$key]['#access'] = FALSE;
    }
  }
}


/**
 * Access callback for editing user profiles.
 */
function paioo_user_edit_access($account) {
  if (!user_edit_access($account)) {
    return FALSE;
  }

  // Do not show the "Edit profile" tab if there are no user fields to display
  // on it, or if there are but the current user doesn't have access to
  // actually edit any of those fields.
  if ($instances = field_info_instances('user', 'user')) {
    foreach ($instances as $instance) {
      $field = field_info_field($instance['field_name']);
      if (field_access('edit', $field, $instance['entity_type'], $account)) {
        return TRUE;
      }
    }
  }

  return FALSE;
}

/**
 * Implements hook_module_implements_alter().
 */
function paioo_user_module_implements_alter(&$implementations, $hook) {
  // To allow paioo_user_form_paioo_user_profile_form_alter() to hide
  // all non-field elements from the "Edit profile" form, we must ensure that
  // this module's form alter hooks run last.
  if ($hook == 'form_alter' && isset($implementations['paioo_user'])) {
    $group = $implementations['paioo_user'];
    unset($implementations['paioo_user']);
    $implementations['paioo_user'] = $group;
  }
}

/**
 * Implements hook_field_extra_fields_alter().
 */
function paioo_user_field_extra_fields_alter(&$info) {
  // Do not show any of the "extra" user fields on the Manage Fields form; they
  // will be displayed on "Edit account" but the real user fields will be
  // displayed on "Edit profile", so there is no reason to allow them to be
  // ordered with respect to each other.
  unset($info['user']['user']['form']);
}


/**
 * Implementation of hook_exit().
 *
 * This function acts on a drupal_goto from user_pass_reset form. The user is
 * redirected to the password change tab instead of the account edit form.
 */
function paioo_user_exit($destination = NULL) {
  static $processed = FALSE;

  // Check if this is a drupal_goto from the password reset page.
  if (!$processed && isset($destination) && arg(0) == 'user' && arg(1) == 'reset') {
    $url_parts = parse_url($destination);
    // Check if the redirect has a path.
    if (isset($url_parts['path'])) {
      // Check if the redirect path is user/%user/edit.
      $path = substr($url_parts['path'], 1);
      $args = arg(NULL, $path);
      if (count($args) == 3 && $args[0] == 'user' && $args[2] == 'edit') {
        // Prevent loops.
        $processed = TRUE;
        // Change the drupal_goto to our change password tab.
        $path .= '/password';
        $opts = array();
        if (!empty($url_parts['fragment'])) {
          $opts['fragment'] = $url_parts['fragment'];
        }
        if (!empty($url_parts['query'])) {
          parse_str($url_parts['query'], $params);
          $opts['query'] = $params;
        }
        drupal_goto($path, $opts);
      }
    }
  }
}
